package persistance;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

import model.Inventory;

public class InventoryDAO {
	
	Scanner scan= new Scanner(System.in);
	public static void displayAllStock()
	{
		Connection con= ConnectToDB.getConnection();
		String sql ="select * from inventory ";
		try {
			PreparedStatement ps = con.prepareStatement(sql);
			ResultSet rs=ps.executeQuery();
			if(rs.next()==false)
				System.out.println(" no products in the inventory");
			else
			{
				do {
						Inventory item = new Inventory();
						item.setProductId(rs.getInt("productId"));
						item.setBranchId(rs.getInt("branchId"));
						item.setSize(rs.getInt("sizes"));
						item.setPrice(rs.getDouble("price"));
						item.setQuantity(rs.getInt("quantity"));
						item.toString();
				}while(rs.next());
			}
		} catch (SQLException e) {
			System.out.println("products cant be displayed in the inventoryDAO");
			e.printStackTrace();
		}
		ConnectToDB.closeConnection(con);
	}
	
	public void displayStockById(int bid)
	{
		Connection con=ConnectToDB.getConnection();
		String sql="select * from inventory where branchid = ?";
		try {
			PreparedStatement ps = con.prepareStatement(sql);
			ps.setInt(1, bid);
			ResultSet rs=ps.executeQuery();
			if(rs.next()==false)
				System.out.println(" no products in the inventory of your branch");
			else
			{
				do {
						Inventory item = new Inventory();
						item.setProductId(rs.getInt("productId"));
						item.setBranchId(bid);
						item.setSize(rs.getInt("sizes"));
						item.setPrice(rs.getDouble("price"));
						item.setQuantity(rs.getInt("quantity"));
						item.toString();
				}while(rs.next());
			}
		} catch (SQLException e) {
			System.out.println("products cant be displayed in the inventoryDAO");
			e.printStackTrace();
		}
		ConnectToDB.closeConnection(con);
	}
	
	public void insertIntoInventory()
	{
		Connection con=ConnectToDB.getConnection();
		String sql="insert into inventory values(?,?,?,?,?)";
		try {
			PreparedStatement ps = con.prepareStatement(sql);
			System.out.println("enter the product id");
			ps.setInt(1, scan.nextInt());
			System.out.println("enter the branch id");
			ps.setInt(2, scan.nextInt());
			System.out.println("enter the size");
			ps.setInt(3, scan.nextInt());
			System.out.println("enter the quantity");
			ps.setInt(4, scan.nextInt());
			System.out.println("enter the price");
			ps.setDouble(5,scan.nextDouble() );
			ps.executeUpdate();
		} catch (SQLException e) {
		
			System.out.println("product does not exist");
		}
		ConnectToDB.closeConnection(con);
		
	}
	
	public void getProductbyName(String name)
	{
		Connection con = ConnectToDB.getConnection();
		String sql="select i.productid,i.branchid,i.size,i.price,i.quantity  from inventory i, products p where i.productid=p.productid and productname like '%?%";
		try {
			PreparedStatement ps = con.prepareStatement(sql);
			ps.setString(1, name);
			ResultSet rs=ps.executeQuery();
			if(rs.next()==false)
				System.out.println(" no product found by the name :"+name);
			else
			{
				do {
					Inventory item = new Inventory();
					item.setProductId(rs.getInt("productId"));
					item.setBranchId(rs.getInt("branchId"));
					item.setSize(rs.getInt("size"));
					item.setPrice(rs.getDouble("price"));
					item.setQuantity(rs.getInt("quantity"));
					item.toString();
				}while(rs.next());
			}
		} catch (SQLException e) {
			System.out.println(" cant display the iventory items by product name");
			e.printStackTrace();
		}
		
	}
	public void getProductbyIdAndSize(int id,int size)
	{
		Connection con = ConnectToDB.getConnection();
		String sql="select * from inventory  where productid=? and size=?";
		try {
			PreparedStatement ps = con.prepareStatement(sql);
			ps.setInt(1, id);
			ps.setInt(2, size);
			ResultSet rs=ps.executeQuery();
			if(rs.next()==false)
				System.out.println(" no product found by the product id :"+id+" and size "+size);
			else
			{
				do {
					Inventory item = new Inventory();
					item.setProductId(rs.getInt("productId"));
					item.setBranchId(rs.getInt("branchId"));
					item.setSize(rs.getInt("size"));
					item.setPrice(rs.getDouble("price"));
					item.setQuantity(rs.getInt("quantity"));
					item.toString();
				}while(rs.next());
			}
		} catch (SQLException e) {
			System.out.println(" cant display the iventory items by productid and size");
			e.printStackTrace();
		}
		ConnectToDB.closeConnection(con);
		
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
